// source: metrics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var metadata_pb = require('./metadata_pb.js');
goog.object.extend(proto, metadata_pb);
var metric_pb = require('./metric_pb.js');
goog.object.extend(proto, metric_pb);
goog.exportSymbol('proto.atlas.Metrics', null, global);
goog.exportSymbol('proto.atlas.Metrics.NameOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metrics.TypeOptionalCase', null, global);
goog.exportSymbol('proto.atlas.MetricsType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.atlas.Metrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.atlas.Metrics.repeatedFields_, proto.atlas.Metrics.oneofGroups_);
};
goog.inherits(proto.atlas.Metrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.atlas.Metrics.displayName = 'proto.atlas.Metrics';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.atlas.Metrics.repeatedFields_ = [400];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.atlas.Metrics.oneofGroups_ = [[200],[300]];

/**
 * @enum {number}
 */
proto.atlas.Metrics.TypeOptionalCase = {
  TYPE_OPTIONAL_NOT_SET: 0,
  TYPE: 200
};

/**
 * @return {proto.atlas.Metrics.TypeOptionalCase}
 */
proto.atlas.Metrics.prototype.getTypeOptionalCase = function() {
  return /** @type {proto.atlas.Metrics.TypeOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metrics.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.atlas.Metrics.NameOptionalCase = {
  NAME_OPTIONAL_NOT_SET: 0,
  NAME: 300
};

/**
 * @return {proto.atlas.Metrics.NameOptionalCase}
 */
proto.atlas.Metrics.prototype.getNameOptionalCase = function() {
  return /** @type {proto.atlas.Metrics.NameOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metrics.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.atlas.Metrics.prototype.toObject = function(opt_includeInstance) {
  return proto.atlas.Metrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.atlas.Metrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.Metrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && metadata_pb.Metadata.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 200, 0),
    name: jspb.Message.getFieldWithDefault(msg, 300, ""),
    metricsList: jspb.Message.toObjectList(msg.getMetricsList(),
    metric_pb.Metric.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.atlas.Metrics}
 */
proto.atlas.Metrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.atlas.Metrics;
  return proto.atlas.Metrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.atlas.Metrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.atlas.Metrics}
 */
proto.atlas.Metrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new metadata_pb.Metadata;
      reader.readMessage(value,metadata_pb.Metadata.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 200:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 300:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 400:
      var value = new metric_pb.Metric;
      reader.readMessage(value,metric_pb.Metric.deserializeBinaryFromReader);
      msg.addMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.atlas.Metrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.atlas.Metrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.atlas.Metrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.Metrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      metadata_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 200));
  if (f != null) {
    writer.writeInt32(
      200,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 300));
  if (f != null) {
    writer.writeString(
      300,
      f
    );
  }
  f = message.getMetricsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      400,
      f,
      metric_pb.Metric.serializeBinaryToWriter
    );
  }
};


/**
 * optional Metadata header = 100;
 * @return {?proto.atlas.Metadata}
 */
proto.atlas.Metrics.prototype.getHeader = function() {
  return /** @type{?proto.atlas.Metadata} */ (
    jspb.Message.getWrapperField(this, metadata_pb.Metadata, 100));
};


/**
 * @param {?proto.atlas.Metadata|undefined} value
 * @return {!proto.atlas.Metrics} returns this
*/
proto.atlas.Metrics.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.Metrics} returns this
 */
proto.atlas.Metrics.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metrics.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional int32 type = 200;
 * @return {number}
 */
proto.atlas.Metrics.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 200, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metrics} returns this
 */
proto.atlas.Metrics.prototype.setType = function(value) {
  return jspb.Message.setOneofField(this, 200, proto.atlas.Metrics.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metrics} returns this
 */
proto.atlas.Metrics.prototype.clearType = function() {
  return jspb.Message.setOneofField(this, 200, proto.atlas.Metrics.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metrics.prototype.hasType = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional string name = 300;
 * @return {string}
 */
proto.atlas.Metrics.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 300, ""));
};


/**
 * @param {string} value
 * @return {!proto.atlas.Metrics} returns this
 */
proto.atlas.Metrics.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 300, proto.atlas.Metrics.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metrics} returns this
 */
proto.atlas.Metrics.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 300, proto.atlas.Metrics.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metrics.prototype.hasName = function() {
  return jspb.Message.getField(this, 300) != null;
};


/**
 * repeated Metric metrics = 400;
 * @return {!Array<!proto.atlas.Metric>}
 */
proto.atlas.Metrics.prototype.getMetricsList = function() {
  return /** @type{!Array<!proto.atlas.Metric>} */ (
    jspb.Message.getRepeatedWrapperField(this, metric_pb.Metric, 400));
};


/**
 * @param {!Array<!proto.atlas.Metric>} value
 * @return {!proto.atlas.Metrics} returns this
*/
proto.atlas.Metrics.prototype.setMetricsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 400, value);
};


/**
 * @param {!proto.atlas.Metric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.atlas.Metric}
 */
proto.atlas.Metrics.prototype.addMetrics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 400, opt_value, proto.atlas.Metric, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.atlas.Metrics} returns this
 */
proto.atlas.Metrics.prototype.clearMetricsList = function() {
  return this.setMetricsList([]);
};


/**
 * @enum {number}
 */
proto.atlas.MetricsType = {
  METRICS_TYPE_RESERVED: 0,
  METRICS_TYPE_UNSPECIFIED: 100,
  METRICS_TYPE_RESOURCE_UTILIZATION: 200
};

goog.object.extend(exports, proto.atlas);
