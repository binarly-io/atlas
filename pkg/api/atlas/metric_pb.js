// source: metric.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.atlas.Metric', null, global);
goog.exportSymbol('proto.atlas.Metric.DescriptionOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metric.NameOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metric.TimestampOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metric.TypeOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metric.ValueCase', null, global);
goog.exportSymbol('proto.atlas.MetricType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.atlas.Metric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.atlas.Metric.oneofGroups_);
};
goog.inherits(proto.atlas.Metric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.atlas.Metric.displayName = 'proto.atlas.Metric';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.atlas.Metric.oneofGroups_ = [[100],[110],[200],[300],[400,410,420,430,440,450,460]];

/**
 * @enum {number}
 */
proto.atlas.Metric.TypeOptionalCase = {
  TYPE_OPTIONAL_NOT_SET: 0,
  TYPE: 100
};

/**
 * @return {proto.atlas.Metric.TypeOptionalCase}
 */
proto.atlas.Metric.prototype.getTypeOptionalCase = function() {
  return /** @type {proto.atlas.Metric.TypeOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metric.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.atlas.Metric.NameOptionalCase = {
  NAME_OPTIONAL_NOT_SET: 0,
  NAME: 110
};

/**
 * @return {proto.atlas.Metric.NameOptionalCase}
 */
proto.atlas.Metric.prototype.getNameOptionalCase = function() {
  return /** @type {proto.atlas.Metric.NameOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metric.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.atlas.Metric.TimestampOptionalCase = {
  TIMESTAMP_OPTIONAL_NOT_SET: 0,
  TS: 200
};

/**
 * @return {proto.atlas.Metric.TimestampOptionalCase}
 */
proto.atlas.Metric.prototype.getTimestampOptionalCase = function() {
  return /** @type {proto.atlas.Metric.TimestampOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metric.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.atlas.Metric.DescriptionOptionalCase = {
  DESCRIPTION_OPTIONAL_NOT_SET: 0,
  DESCRIPTION: 300
};

/**
 * @return {proto.atlas.Metric.DescriptionOptionalCase}
 */
proto.atlas.Metric.prototype.getDescriptionOptionalCase = function() {
  return /** @type {proto.atlas.Metric.DescriptionOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metric.oneofGroups_[3]));
};

/**
 * @enum {number}
 */
proto.atlas.Metric.ValueCase = {
  VALUE_NOT_SET: 0,
  STRING_VALUE: 400,
  DOUBLE_VALUE: 410,
  INT32_VALUE: 420,
  UINT32_VALUE: 430,
  INT64_VALUE: 440,
  UINT64_VALUE: 450,
  BYTES_VALUE: 460
};

/**
 * @return {proto.atlas.Metric.ValueCase}
 */
proto.atlas.Metric.prototype.getValueCase = function() {
  return /** @type {proto.atlas.Metric.ValueCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metric.oneofGroups_[4]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.atlas.Metric.prototype.toObject = function(opt_includeInstance) {
  return proto.atlas.Metric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.atlas.Metric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.Metric.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 100, 0),
    name: jspb.Message.getFieldWithDefault(msg, 110, ""),
    ts: (f = msg.getTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 300, ""),
    stringValue: jspb.Message.getFieldWithDefault(msg, 400, ""),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 410, 0.0),
    int32Value: jspb.Message.getFieldWithDefault(msg, 420, 0),
    uint32Value: jspb.Message.getFieldWithDefault(msg, 430, 0),
    int64Value: jspb.Message.getFieldWithDefault(msg, 440, 0),
    uint64Value: jspb.Message.getFieldWithDefault(msg, 450, 0),
    bytesValue: msg.getBytesValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.atlas.Metric}
 */
proto.atlas.Metric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.atlas.Metric;
  return proto.atlas.Metric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.atlas.Metric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.atlas.Metric}
 */
proto.atlas.Metric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = /** @type {!proto.atlas.MetricType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 110:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 200:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTs(value);
      break;
    case 300:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 400:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 410:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 420:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInt32Value(value);
      break;
    case 430:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUint32Value(value);
      break;
    case 440:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64Value(value);
      break;
    case 450:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUint64Value(value);
      break;
    case 460:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.atlas.Metric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.atlas.Metric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.atlas.Metric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.Metric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.atlas.MetricType} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeEnum(
      100,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 110));
  if (f != null) {
    writer.writeString(
      110,
      f
    );
  }
  f = message.getTs();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 300));
  if (f != null) {
    writer.writeString(
      300,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 400));
  if (f != null) {
    writer.writeString(
      400,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 410));
  if (f != null) {
    writer.writeDouble(
      410,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 420));
  if (f != null) {
    writer.writeInt32(
      420,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 430));
  if (f != null) {
    writer.writeUint32(
      430,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 440));
  if (f != null) {
    writer.writeInt64(
      440,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 450));
  if (f != null) {
    writer.writeUint64(
      450,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 460));
  if (f != null) {
    writer.writeBytes(
      460,
      f
    );
  }
};


/**
 * optional MetricType type = 100;
 * @return {!proto.atlas.MetricType}
 */
proto.atlas.Metric.prototype.getType = function() {
  return /** @type {!proto.atlas.MetricType} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {!proto.atlas.MetricType} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setType = function(value) {
  return jspb.Message.setOneofField(this, 100, proto.atlas.Metric.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearType = function() {
  return jspb.Message.setOneofField(this, 100, proto.atlas.Metric.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasType = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional string name = 110;
 * @return {string}
 */
proto.atlas.Metric.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 110, ""));
};


/**
 * @param {string} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 110, proto.atlas.Metric.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 110, proto.atlas.Metric.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasName = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional google.protobuf.Timestamp ts = 200;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.atlas.Metric.prototype.getTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 200));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.atlas.Metric} returns this
*/
proto.atlas.Metric.prototype.setTs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 200, proto.atlas.Metric.oneofGroups_[2], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearTs = function() {
  return this.setTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasTs = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional string description = 300;
 * @return {string}
 */
proto.atlas.Metric.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 300, ""));
};


/**
 * @param {string} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setDescription = function(value) {
  return jspb.Message.setOneofField(this, 300, proto.atlas.Metric.oneofGroups_[3], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearDescription = function() {
  return jspb.Message.setOneofField(this, 300, proto.atlas.Metric.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 300) != null;
};


/**
 * optional string string_value = 400;
 * @return {string}
 */
proto.atlas.Metric.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 400, ""));
};


/**
 * @param {string} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 400, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 400, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 400) != null;
};


/**
 * optional double double_value = 410;
 * @return {number}
 */
proto.atlas.Metric.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 410, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 410, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 410, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 410) != null;
};


/**
 * optional int32 int32_value = 420;
 * @return {number}
 */
proto.atlas.Metric.prototype.getInt32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 420, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setInt32Value = function(value) {
  return jspb.Message.setOneofField(this, 420, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearInt32Value = function() {
  return jspb.Message.setOneofField(this, 420, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasInt32Value = function() {
  return jspb.Message.getField(this, 420) != null;
};


/**
 * optional uint32 uint32_value = 430;
 * @return {number}
 */
proto.atlas.Metric.prototype.getUint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 430, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setUint32Value = function(value) {
  return jspb.Message.setOneofField(this, 430, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearUint32Value = function() {
  return jspb.Message.setOneofField(this, 430, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasUint32Value = function() {
  return jspb.Message.getField(this, 430) != null;
};


/**
 * optional int64 int64_value = 440;
 * @return {number}
 */
proto.atlas.Metric.prototype.getInt64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 440, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofField(this, 440, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearInt64Value = function() {
  return jspb.Message.setOneofField(this, 440, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 440) != null;
};


/**
 * optional uint64 uint64_value = 450;
 * @return {number}
 */
proto.atlas.Metric.prototype.getUint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 450, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setUint64Value = function(value) {
  return jspb.Message.setOneofField(this, 450, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearUint64Value = function() {
  return jspb.Message.setOneofField(this, 450, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasUint64Value = function() {
  return jspb.Message.getField(this, 450) != null;
};


/**
 * optional bytes bytes_value = 460;
 * @return {string}
 */
proto.atlas.Metric.prototype.getBytesValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 460, ""));
};


/**
 * optional bytes bytes_value = 460;
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {string}
 */
proto.atlas.Metric.prototype.getBytesValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesValue()));
};


/**
 * optional bytes bytes_value = 460;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {!Uint8Array}
 */
proto.atlas.Metric.prototype.getBytesValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofField(this, 460, proto.atlas.Metric.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metric} returns this
 */
proto.atlas.Metric.prototype.clearBytesValue = function() {
  return jspb.Message.setOneofField(this, 460, proto.atlas.Metric.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metric.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 460) != null;
};


/**
 * @enum {number}
 */
proto.atlas.MetricType = {
  METRIC_TYPE_RESERVED: 0,
  METRIC_TYPE_UNSPECIFIED: 100,
  METRIC_TYPE_CPU: 200,
  METRIC_TYPE_RAM: 300
};

goog.object.extend(exports, proto.atlas);
