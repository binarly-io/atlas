// source: metadata.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var address_map_pb = require('./address_map_pb.js');
goog.object.extend(proto, address_map_pb);
var data_chunk_properties_pb = require('./data_chunk_properties_pb.js');
goog.object.extend(proto, data_chunk_properties_pb);
var presentation_options_pb = require('./presentation_options_pb.js');
goog.object.extend(proto, presentation_options_pb);
goog.exportSymbol('proto.atlas.Metadata', null, global);
goog.exportSymbol('proto.atlas.Metadata.AddressesOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.DataChunkPropertiesOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.DescriptionOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.ModeOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.NameOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.PresentationOptionsOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.StatusOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.TsOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.TypeOptionalCase', null, global);
goog.exportSymbol('proto.atlas.Metadata.VersionOptionalCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.atlas.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.atlas.Metadata.oneofGroups_);
};
goog.inherits(proto.atlas.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.atlas.Metadata.displayName = 'proto.atlas.Metadata';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.atlas.Metadata.oneofGroups_ = [[100],[200],[300],[400],[500],[600],[700],[800],[900],[1000]];

/**
 * @enum {number}
 */
proto.atlas.Metadata.TypeOptionalCase = {
  TYPE_OPTIONAL_NOT_SET: 0,
  TYPE: 100
};

/**
 * @return {proto.atlas.Metadata.TypeOptionalCase}
 */
proto.atlas.Metadata.prototype.getTypeOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.TypeOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.NameOptionalCase = {
  NAME_OPTIONAL_NOT_SET: 0,
  NAME: 200
};

/**
 * @return {proto.atlas.Metadata.NameOptionalCase}
 */
proto.atlas.Metadata.prototype.getNameOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.NameOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.VersionOptionalCase = {
  VERSION_OPTIONAL_NOT_SET: 0,
  VERSION: 300
};

/**
 * @return {proto.atlas.Metadata.VersionOptionalCase}
 */
proto.atlas.Metadata.prototype.getVersionOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.VersionOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.DescriptionOptionalCase = {
  DESCRIPTION_OPTIONAL_NOT_SET: 0,
  DESCRIPTION: 400
};

/**
 * @return {proto.atlas.Metadata.DescriptionOptionalCase}
 */
proto.atlas.Metadata.prototype.getDescriptionOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.DescriptionOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[3]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.StatusOptionalCase = {
  STATUS_OPTIONAL_NOT_SET: 0,
  STATUS: 500
};

/**
 * @return {proto.atlas.Metadata.StatusOptionalCase}
 */
proto.atlas.Metadata.prototype.getStatusOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.StatusOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[4]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.ModeOptionalCase = {
  MODE_OPTIONAL_NOT_SET: 0,
  MODE: 600
};

/**
 * @return {proto.atlas.Metadata.ModeOptionalCase}
 */
proto.atlas.Metadata.prototype.getModeOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.ModeOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[5]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.TsOptionalCase = {
  TS_OPTIONAL_NOT_SET: 0,
  TS: 700
};

/**
 * @return {proto.atlas.Metadata.TsOptionalCase}
 */
proto.atlas.Metadata.prototype.getTsOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.TsOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[6]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.AddressesOptionalCase = {
  ADDRESSES_OPTIONAL_NOT_SET: 0,
  ADDRESSES: 800
};

/**
 * @return {proto.atlas.Metadata.AddressesOptionalCase}
 */
proto.atlas.Metadata.prototype.getAddressesOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.AddressesOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[7]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.PresentationOptionsOptionalCase = {
  PRESENTATION_OPTIONS_OPTIONAL_NOT_SET: 0,
  PRESENTATION_OPTIONS: 900
};

/**
 * @return {proto.atlas.Metadata.PresentationOptionsOptionalCase}
 */
proto.atlas.Metadata.prototype.getPresentationOptionsOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.PresentationOptionsOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[8]));
};

/**
 * @enum {number}
 */
proto.atlas.Metadata.DataChunkPropertiesOptionalCase = {
  DATA_CHUNK_PROPERTIES_OPTIONAL_NOT_SET: 0,
  DATA_CHUNK_PROPERTIES: 1000
};

/**
 * @return {proto.atlas.Metadata.DataChunkPropertiesOptionalCase}
 */
proto.atlas.Metadata.prototype.getDataChunkPropertiesOptionalCase = function() {
  return /** @type {proto.atlas.Metadata.DataChunkPropertiesOptionalCase} */(jspb.Message.computeOneofCase(this, proto.atlas.Metadata.oneofGroups_[9]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.atlas.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.atlas.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.atlas.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 100, 0),
    name: jspb.Message.getFieldWithDefault(msg, 200, ""),
    version: jspb.Message.getFieldWithDefault(msg, 300, 0),
    description: jspb.Message.getFieldWithDefault(msg, 400, ""),
    status: jspb.Message.getFieldWithDefault(msg, 500, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 600, 0),
    ts: (f = msg.getTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    addresses: (f = msg.getAddresses()) && address_map_pb.AddressMap.toObject(includeInstance, f),
    presentationOptions: (f = msg.getPresentationOptions()) && presentation_options_pb.PresentationOptions.toObject(includeInstance, f),
    dataChunkProperties: (f = msg.getDataChunkProperties()) && data_chunk_properties_pb.DataChunkProperties.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.atlas.Metadata}
 */
proto.atlas.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.atlas.Metadata;
  return proto.atlas.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.atlas.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.atlas.Metadata}
 */
proto.atlas.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 200:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 300:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 400:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 500:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 600:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMode(value);
      break;
    case 700:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTs(value);
      break;
    case 800:
      var value = new address_map_pb.AddressMap;
      reader.readMessage(value,address_map_pb.AddressMap.deserializeBinaryFromReader);
      msg.setAddresses(value);
      break;
    case 900:
      var value = new presentation_options_pb.PresentationOptions;
      reader.readMessage(value,presentation_options_pb.PresentationOptions.deserializeBinaryFromReader);
      msg.setPresentationOptions(value);
      break;
    case 1000:
      var value = new data_chunk_properties_pb.DataChunkProperties;
      reader.readMessage(value,data_chunk_properties_pb.DataChunkProperties.deserializeBinaryFromReader);
      msg.setDataChunkProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.atlas.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.atlas.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.atlas.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeInt32(
      100,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 200));
  if (f != null) {
    writer.writeString(
      200,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 300));
  if (f != null) {
    writer.writeInt32(
      300,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 400));
  if (f != null) {
    writer.writeString(
      400,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 500));
  if (f != null) {
    writer.writeInt32(
      500,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 600));
  if (f != null) {
    writer.writeInt32(
      600,
      f
    );
  }
  f = message.getTs();
  if (f != null) {
    writer.writeMessage(
      700,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAddresses();
  if (f != null) {
    writer.writeMessage(
      800,
      f,
      address_map_pb.AddressMap.serializeBinaryToWriter
    );
  }
  f = message.getPresentationOptions();
  if (f != null) {
    writer.writeMessage(
      900,
      f,
      presentation_options_pb.PresentationOptions.serializeBinaryToWriter
    );
  }
  f = message.getDataChunkProperties();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      data_chunk_properties_pb.DataChunkProperties.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 100;
 * @return {number}
 */
proto.atlas.Metadata.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.setType = function(value) {
  return jspb.Message.setOneofField(this, 100, proto.atlas.Metadata.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearType = function() {
  return jspb.Message.setOneofField(this, 100, proto.atlas.Metadata.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasType = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional string name = 200;
 * @return {string}
 */
proto.atlas.Metadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 200, ""));
};


/**
 * @param {string} value
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 200, proto.atlas.Metadata.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 200, proto.atlas.Metadata.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasName = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional int32 version = 300;
 * @return {number}
 */
proto.atlas.Metadata.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 300, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.setVersion = function(value) {
  return jspb.Message.setOneofField(this, 300, proto.atlas.Metadata.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearVersion = function() {
  return jspb.Message.setOneofField(this, 300, proto.atlas.Metadata.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 300) != null;
};


/**
 * optional string description = 400;
 * @return {string}
 */
proto.atlas.Metadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 400, ""));
};


/**
 * @param {string} value
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.setDescription = function(value) {
  return jspb.Message.setOneofField(this, 400, proto.atlas.Metadata.oneofGroups_[3], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearDescription = function() {
  return jspb.Message.setOneofField(this, 400, proto.atlas.Metadata.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 400) != null;
};


/**
 * optional int32 status = 500;
 * @return {number}
 */
proto.atlas.Metadata.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 500, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.setStatus = function(value) {
  return jspb.Message.setOneofField(this, 500, proto.atlas.Metadata.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearStatus = function() {
  return jspb.Message.setOneofField(this, 500, proto.atlas.Metadata.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 500) != null;
};


/**
 * optional int32 mode = 600;
 * @return {number}
 */
proto.atlas.Metadata.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 600, 0));
};


/**
 * @param {number} value
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.setMode = function(value) {
  return jspb.Message.setOneofField(this, 600, proto.atlas.Metadata.oneofGroups_[5], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearMode = function() {
  return jspb.Message.setOneofField(this, 600, proto.atlas.Metadata.oneofGroups_[5], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasMode = function() {
  return jspb.Message.getField(this, 600) != null;
};


/**
 * optional google.protobuf.Timestamp ts = 700;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.atlas.Metadata.prototype.getTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 700));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.atlas.Metadata} returns this
*/
proto.atlas.Metadata.prototype.setTs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 700, proto.atlas.Metadata.oneofGroups_[6], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearTs = function() {
  return this.setTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasTs = function() {
  return jspb.Message.getField(this, 700) != null;
};


/**
 * optional AddressMap addresses = 800;
 * @return {?proto.atlas.AddressMap}
 */
proto.atlas.Metadata.prototype.getAddresses = function() {
  return /** @type{?proto.atlas.AddressMap} */ (
    jspb.Message.getWrapperField(this, address_map_pb.AddressMap, 800));
};


/**
 * @param {?proto.atlas.AddressMap|undefined} value
 * @return {!proto.atlas.Metadata} returns this
*/
proto.atlas.Metadata.prototype.setAddresses = function(value) {
  return jspb.Message.setOneofWrapperField(this, 800, proto.atlas.Metadata.oneofGroups_[7], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearAddresses = function() {
  return this.setAddresses(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasAddresses = function() {
  return jspb.Message.getField(this, 800) != null;
};


/**
 * optional PresentationOptions presentation_options = 900;
 * @return {?proto.atlas.PresentationOptions}
 */
proto.atlas.Metadata.prototype.getPresentationOptions = function() {
  return /** @type{?proto.atlas.PresentationOptions} */ (
    jspb.Message.getWrapperField(this, presentation_options_pb.PresentationOptions, 900));
};


/**
 * @param {?proto.atlas.PresentationOptions|undefined} value
 * @return {!proto.atlas.Metadata} returns this
*/
proto.atlas.Metadata.prototype.setPresentationOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 900, proto.atlas.Metadata.oneofGroups_[8], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearPresentationOptions = function() {
  return this.setPresentationOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasPresentationOptions = function() {
  return jspb.Message.getField(this, 900) != null;
};


/**
 * optional DataChunkProperties data_chunk_properties = 1000;
 * @return {?proto.atlas.DataChunkProperties}
 */
proto.atlas.Metadata.prototype.getDataChunkProperties = function() {
  return /** @type{?proto.atlas.DataChunkProperties} */ (
    jspb.Message.getWrapperField(this, data_chunk_properties_pb.DataChunkProperties, 1000));
};


/**
 * @param {?proto.atlas.DataChunkProperties|undefined} value
 * @return {!proto.atlas.Metadata} returns this
*/
proto.atlas.Metadata.prototype.setDataChunkProperties = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1000, proto.atlas.Metadata.oneofGroups_[9], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.Metadata} returns this
 */
proto.atlas.Metadata.prototype.clearDataChunkProperties = function() {
  return this.setDataChunkProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.Metadata.prototype.hasDataChunkProperties = function() {
  return jspb.Message.getField(this, 1000) != null;
};


goog.object.extend(exports, proto.atlas);
